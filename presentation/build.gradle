apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

def configs = rootProject.ext.android //android配置
android {
    compileSdkVersion configs.compileSdkVersion
    buildToolsVersion configs.buildToolsVersion
    defaultConfig {
        applicationId "com.crazysunj.crazydaily"
        minSdkVersion configs.minSdkVersion
        targetSdkVersion configs.targetSdkVersion
        versionCode configs.versionCode
        versionName configs.versionName
        multiDexEnabled true
        /**
         * 必须加，否则64位手机无法加载so文件
         */
        ndk {
            abiFilters "x86", "armeabi"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    def listSubFile = {
        def folders = []
        def valuesFolder = 'src/main/res/values'
        def valuesFiles = file(valuesFolder).listFiles()
        valuesFiles.each {
            item -> folders.add(item.absolutePath)
        }
        folders.add(file(valuesFolder).parentFile.absolutePath)
        def layoutFolder = 'src/main/res/layout'
        def layoutFiles = file(layoutFolder).listFiles()
        layoutFiles.each {
            item -> folders.add(item.absolutePath)
        }
        folders.add(file(layoutFolder).parentFile.absolutePath)
        return folders
    }
    sourceSets {
        main {
            res.srcDirs = listSubFile()
        }
    }
}

dependencies {

    def libs = rootProject.ext.dependencies //依赖库配置
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation libs.appcompatv7
    implementation libs.recyclerviewv7
    implementation libs.cardviewv7
    implementation libs.design
    implementation libs.gpuimage //图像处理
    implementation libs.multidex
    implementation libs.butterknife
    implementation libs.MTRVA //recyclerview数据处理
    implementation libs.statusbarutil //状态栏
    implementation libs.pickerdialog //选择对话框
    implementation libs.circleimageview //圆形imageview
    implementation libs.niceVieoPlayer//视频播放
    implementation libs.cardslideview //卡片轮播
    implementation libs.fastjson
    implementation libs.weex
    implementation libs.wavesidebar //字符波浪滑动
    implementation libs.shimmer
    implementation libs.lottie
    implementation libs.photoview
    implementation libs.richtext //富文本
    implementation libs.ucrop //裁剪
    implementation libs.zxing //二维码
    implementation libs.pgyer //蒲公英
    debugImplementation libs.debugLeakcanary
    releaseImplementation libs.releaseLeakcanary
    annotationProcessor libs.butterknifeCompiler
    implementation project(':data')
    implementation(libs.materialsearchview) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
    }
    implementation(libs.glide) {
        exclude group: "com.android.support"
    }
    implementation(libs.glideTransformations) {
        exclude group: 'com.github.bumptech.glide', module: 'glide'
    }
    annotationProcessor libs.glideCompiler
    implementation(libs.permission) { //权限
        exclude module: "support-v13"
    }
    annotationProcessor libs.permissionCompiler
    implementation(libs.sonic) {
        exclude group: "com.android.support"
    }
}
